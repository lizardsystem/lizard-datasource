[buildout]
index = http://packages.lizardsystem.nl
extends =
    http://packages.lizardsystem.nl/kgs/latest.cfg
find-links =
prefer-final = true
show-picked-versions = true
extensions = mr.developer
parts =
    django
    omelette
    console_scripts
    pyflakes
    sphinx
develop = .
eggs =
    lizard-datasource
auto-checkout=
    lizard-map
    lizard-ui

[versions]
# Specific pins
lizard-datasource =
zc.buildout = 2.2.1
Django = 1.6.6
django-nose = 1.2
factory-boy =
djangorecipe =
django-extensions =
django-compressor =
django-jsonfield =
nose =
syseggrecipe =


[sources]
# Examples:
# lizard-ui = git git@github.com:lizardsystem/nensskel.git
lizard-ui = git git@github.com:lizardsystem/lizard-ui.git branch=lizard5
lizard-map = git git@github.com:lizardsystem/lizard-map.git branch=lizard5


[django]
# Sets up django for testing our application.
# See http://jacobian.org/writing/django-apps-with-buildout/
recipe = djangorecipe
project = lizard_datasource
projectegg = lizard_datasource
settings = testsettings
test = lizard_datasource
eggs = lizard-datasource


[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
interpreter = python
eggs =
    ${buildout:eggs}
# Development tools
    eazysvn
    createcoverage
    coverage
    pep8
    zest.releaser


[pyflakes]
# Hairy way to install pyflakes: old-style distutils script.
recipe = zc.recipe.egg
scripts =
   pyflakes
eggs =
   pyflakes
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'


[sphinx]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/doc/source
build = ${buildout:directory}/doc/build
eggs = ${buildout:eggs}
